{"{\"assumptions\":{},\"sourceRoot\":\"/home/remmy/Documents/alx/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/remmy/Documents/alx/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/home/remmy/Documents/alx/alx-backend-javascript/0x06-unittests_in_js/0-calcul.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/remmy/Documents/alx/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.20.12:development":{"value":{"code":"/* tests 0-calcul.js */\n\nconst assert = require('assert');\nconst calculateNumber = require('./0-calcul');\ndescribe('calculateNumber', () => {\n  it('should round numbers and return the sum', () => {\n    // case 1\n    const res1 = calculateNumber(1, 3);\n    assert.strictEqual(res1, 4);\n\n    // case 2\n    const res2 = calculateNumber(1, 3.7);\n    assert.strictEqual(res2, 5);\n\n    // case 3\n    const res3 = calculateNumber(1.2, 3.7);\n    assert.strictEqual(res3, 5);\n\n    // case 4\n    const res4 = calculateNumber(1.5, 3.7);\n    assert.strictEqual(res4, 6);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiY2FsY3VsYXRlTnVtYmVyIiwiZGVzY3JpYmUiLCJpdCIsInJlczEiLCJzdHJpY3RFcXVhbCIsInJlczIiLCJyZXMzIiwicmVzNCJdLCJzb3VyY2VSb290IjoiL2hvbWUvcmVtbXkvRG9jdW1lbnRzL2FseC9hbHgtYmFja2VuZC1qYXZhc2NyaXB0LzB4MDYtdW5pdHRlc3RzX2luX2pzLyIsInNvdXJjZXMiOlsiMC1jYWxjdWwudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0ZXN0cyAwLWNhbGN1bC5qcyAqL1xuXG5jb25zdCBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcbmNvbnN0IGNhbGN1bGF0ZU51bWJlciA9IHJlcXVpcmUoJy4vMC1jYWxjdWwnKTtcblxuZGVzY3JpYmUoJ2NhbGN1bGF0ZU51bWJlcicsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHJvdW5kIG51bWJlcnMgYW5kIHJldHVybiB0aGUgc3VtJywgKCkgPT4ge1xuICAgICAgICAvLyBjYXNlIDFcbiAgICAgICAgY29uc3QgcmVzMSA9IGNhbGN1bGF0ZU51bWJlcigxLCAzKTtcbiAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJlczEsIDQpO1xuXG4gICAgICAgIC8vIGNhc2UgMlxuICAgICAgICBjb25zdCByZXMyID0gY2FsY3VsYXRlTnVtYmVyKDEsIDMuNyk7XG4gICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyZXMyLCA1KTtcblxuICAgICAgICAvLyBjYXNlIDNcbiAgICAgICAgY29uc3QgcmVzMyA9IGNhbGN1bGF0ZU51bWJlcigxLjIsIDMuNyk7XG4gICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyZXMzLCA1KTtcblxuICAgICAgICAvLyBjYXNlIDRcbiAgICAgICAgY29uc3QgcmVzNCA9IGNhbGN1bGF0ZU51bWJlcigxLjUsIDMuNyk7XG4gICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyZXM0LCA2KTtcbiAgICB9KTtcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQ2hDLE1BQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLFlBQVksQ0FBQztBQUU3Q0UsUUFBUSxDQUFDLGlCQUFpQixFQUFFLE1BQU07RUFDOUJDLEVBQUUsQ0FBQyx5Q0FBeUMsRUFBRSxNQUFNO0lBQ2hEO0lBQ0EsTUFBTUMsSUFBSSxHQUFHSCxlQUFlLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNsQ0YsTUFBTSxDQUFDTSxXQUFXLENBQUNELElBQUksRUFBRSxDQUFDLENBQUM7O0lBRTNCO0lBQ0EsTUFBTUUsSUFBSSxHQUFHTCxlQUFlLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztJQUNwQ0YsTUFBTSxDQUFDTSxXQUFXLENBQUNDLElBQUksRUFBRSxDQUFDLENBQUM7O0lBRTNCO0lBQ0EsTUFBTUMsSUFBSSxHQUFHTixlQUFlLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQztJQUN0Q0YsTUFBTSxDQUFDTSxXQUFXLENBQUNFLElBQUksRUFBRSxDQUFDLENBQUM7O0lBRTNCO0lBQ0EsTUFBTUMsSUFBSSxHQUFHUCxlQUFlLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQztJQUN0Q0YsTUFBTSxDQUFDTSxXQUFXLENBQUNHLElBQUksRUFBRSxDQUFDLENBQUM7RUFDL0IsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["assert","require","calculateNumber","describe","it","res1","strictEqual","res2","res3","res4"],"sourceRoot":"/home/remmy/Documents/alx/alx-backend-javascript/0x06-unittests_in_js/","sources":["0-calcul.test.js"],"sourcesContent":["/* tests 0-calcul.js */\n\nconst assert = require('assert');\nconst calculateNumber = require('./0-calcul');\n\ndescribe('calculateNumber', () => {\n    it('should round numbers and return the sum', () => {\n        // case 1\n        const res1 = calculateNumber(1, 3);\n        assert.strictEqual(res1, 4);\n\n        // case 2\n        const res2 = calculateNumber(1, 3.7);\n        assert.strictEqual(res2, 5);\n\n        // case 3\n        const res3 = calculateNumber(1.2, 3.7);\n        assert.strictEqual(res3, 5);\n\n        // case 4\n        const res4 = calculateNumber(1.5, 3.7);\n        assert.strictEqual(res4, 6);\n    });\n});"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,eAAe,GAAGD,OAAO,CAAC,YAAY,CAAC;AAE7CE,QAAQ,CAAC,iBAAiB,EAAE,MAAM;EAC9BC,EAAE,CAAC,yCAAyC,EAAE,MAAM;IAChD;IACA,MAAMC,IAAI,GAAGH,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC;IAClCF,MAAM,CAACM,WAAW,CAACD,IAAI,EAAE,CAAC,CAAC;;IAE3B;IACA,MAAME,IAAI,GAAGL,eAAe,CAAC,CAAC,EAAE,GAAG,CAAC;IACpCF,MAAM,CAACM,WAAW,CAACC,IAAI,EAAE,CAAC,CAAC;;IAE3B;IACA,MAAMC,IAAI,GAAGN,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC;IACtCF,MAAM,CAACM,WAAW,CAACE,IAAI,EAAE,CAAC,CAAC;;IAE3B;IACA,MAAMC,IAAI,GAAGP,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC;IACtCF,MAAM,CAACM,WAAW,CAACG,IAAI,EAAE,CAAC,CAAC;EAC/B,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1700734978466},"{\"assumptions\":{},\"sourceRoot\":\"/home/remmy/Documents/alx/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/remmy/Documents/alx/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/home/remmy/Documents/alx/alx-backend-javascript/0x06-unittests_in_js/0-calcul.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/remmy/Documents/alx/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.20.12:development":{"value":{"code":"#!/usr/bin/node\n/* function calculateNumber that accepts 2 arguments (a, b) and returns their sum. */\nfunction calculateNumber(a, b) {\n  return Math.round(a) + Math.round(b);\n}\nmodule.exports = calculateNumber;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYWxjdWxhdGVOdW1iZXIiLCJhIiwiYiIsIk1hdGgiLCJyb3VuZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9ob21lL3JlbW15L0RvY3VtZW50cy9hbHgvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbIjAtY2FsY3VsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIiMhL3Vzci9iaW4vbm9kZVxuLyogZnVuY3Rpb24gY2FsY3VsYXRlTnVtYmVyIHRoYXQgYWNjZXB0cyAyIGFyZ3VtZW50cyAoYSwgYikgYW5kIHJldHVybnMgdGhlaXIgc3VtLiAqL1xuXG5mdW5jdGlvbiBjYWxjdWxhdGVOdW1iZXIoYSwgYikge1xuICByZXR1cm4gTWF0aC5yb3VuZChhKSArIE1hdGgucm91bmQoYik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2FsY3VsYXRlTnVtYmVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUEsU0FBU0EsZUFBZSxDQUFDQyxDQUFDLEVBQUVDLENBQUMsRUFBRTtFQUM3QixPQUFPQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0gsQ0FBQyxDQUFDLEdBQUdFLElBQUksQ0FBQ0MsS0FBSyxDQUFDRixDQUFDLENBQUM7QUFDdEM7QUFFQUcsTUFBTSxDQUFDQyxPQUFPLEdBQUdOLGVBQWUifQ==","map":{"version":3,"names":["calculateNumber","a","b","Math","round","module","exports"],"sourceRoot":"/home/remmy/Documents/alx/alx-backend-javascript/0x06-unittests_in_js/","sources":["0-calcul.js"],"sourcesContent":["#!/usr/bin/node\n/* function calculateNumber that accepts 2 arguments (a, b) and returns their sum. */\n\nfunction calculateNumber(a, b) {\n  return Math.round(a) + Math.round(b);\n}\n\nmodule.exports = calculateNumber;\n"],"mappings":"AAAA;AACA;AAEA,SAASA,eAAe,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC7B,OAAOC,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC,GAAGE,IAAI,CAACC,KAAK,CAACF,CAAC,CAAC;AACtC;AAEAG,MAAM,CAACC,OAAO,GAAGN,eAAe"}},"mtime":1700734928106}}